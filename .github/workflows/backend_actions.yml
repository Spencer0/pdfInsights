name: Backend CI/CD Pipeline

on:
  push:
    paths:
      - 'packages/backend/**'
      - '.github/backend_actions.yml'
      - 'infrastructure/cloudformation/backend.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        working-directory: ./packages/backend
        run: npm install

      - name: Run tests
        working-directory: ./packages/backend
        run: npm test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy CloudFormation stack
        working-directory: ./infrastructure/cloudformation
        run: |
          aws cloudformation deploy \
            --template-file backend.yaml \
            --stack-name SpendSage-Backend-Stack \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset \
            --parameter-overrides KeyPairName=sendsage-deployment-key

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 216989142399.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and tag Docker image
        working-directory: ./docker/
        run: |
          docker build -f backend.Dockerfile -t spendsage-backend ..
          docker tag spendsage-backend:latest 216989142399.dkr.ecr.us-east-1.amazonaws.com/spendsage-backend:latest

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY_EC2_BACKEND }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Push Docker image to Amazon ECR
        run: |
          docker push 216989142399.dkr.ecr.us-east-1.amazonaws.com/spendsage-backend:latest

      - name: Deploy to EC2 instance
        run: |
          INSTANCE_ID=$(aws cloudformation describe-stacks --stack-name SpendSage-Backend-Stack --query "Stacks[0].Outputs[?OutputKey=='InstanceId'].OutputValue" --output text)
          PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[0].Instances[0].PublicIpAddress" --output text)

          ssh -o "StrictHostKeyChecking=no" ec2-user@$PUBLIC_IP << EOF
            # Login to ECR
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 216989142399.dkr.ecr.us-east-1.amazonaws.com
            
            # Pull the latest image
            docker pull 216989142399.dkr.ecr.us-east-1.amazonaws.com/spendsage-backend:latest
            
            # Stop and remove any existing containers using port 3000
            docker ps -q --filter publish=3000 | xargs -r docker stop
            docker ps -aq --filter publish=3000 | xargs -r docker rm
            
            # Stop and remove any existing containers of the same image
            docker ps -q --filter ancestor=216989142399.dkr.ecr.us-east-1.amazonaws.com/spendsage-backend:latest | xargs -r docker stop
            docker ps -aq --filter ancestor=216989142399.dkr.ecr.us-east-1.amazonaws.com/spendsage-backend:latest | xargs -r docker rm
            
            # Run the new container
            docker run -d -p 3000:3000 216989142399.dkr.ecr.us-east-1.amazonaws.com/spendsage-backend:latest
