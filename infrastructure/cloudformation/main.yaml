AWSTemplateFormatVersion: '2010-09-09'
Description: 'SpendSage Infrastructure Stack'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment type

Resources:
  # VPC and Network Configuration
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-vpc

  # S3 Bucket for PDF Storage
  StatementsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-statements-${Environment}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  # SQS Queue for PDF Processing
  ProcessingQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-processing-queue-${Environment}
      VisibilityTimeout: 900
      MessageRetentionPeriod: 1209600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ProcessingDLQ.Arn
        maxReceiveCount: 3

  ProcessingDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-processing-dlq-${Environment}

  # ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${AWS::StackName}-cluster-${Environment}
      CapacityProviders:
        - FARGATE

  # DocumentDB for User Data
  DBCluster:
    Type: AWS::DocDB::DBCluster
    Properties:
      MasterUsername: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:password}}'
      DBClusterIdentifier: !Sub ${AWS::StackName}-docdb-${Environment}
      EngineVersion: '5.0'
      Port: 27017

  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${AWS::StackName}/docdb/credentials/${Environment}
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\'

  # ElastiCache for Redis (Session Storage & Caching)
  RedisCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      Engine: redis
      CacheNodeType: cache.t3.micro
      NumCacheNodes: 1
      ClusterName: !Sub ${AWS::StackName}-redis-${Environment}

  # Application Load Balancer
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AWS::StackName}-alb-${Environment}
      Scheme: internet-facing
      Type: application
      Subnets: !Ref PublicSubnets

Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-vpc-id

  StatementsBucketName:
    Description: S3 Bucket Name for Statements
    Value: !Ref StatementsBucket
    Export:
      Name: !Sub ${AWS::StackName}-statements-bucket

  ProcessingQueueUrl:
    Description: SQS Queue URL for Processing
    Value: !Ref ProcessingQueue
    Export:
      Name: !Sub ${AWS::StackName}-processing-queue-url