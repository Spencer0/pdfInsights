AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'

  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instance"

  DomainName:
    Type: String
    Description: "The domain name (e.g., example.com)"

  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: "The Route 53 Hosted Zone ID for your domain"

Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "spend-sage-users-table"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"

  BackendECRRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: "spendsage-backend"

  BackendInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "ECRPullPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetAuthorizationToken"
                Resource: "*"
        # Add DynamoDB access policy
        - PolicyName: "DynamoDBAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:PutItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
                Resource: !GetAtt DynamoDBTable.Arn

  BackendInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref BackendInstanceRole

  BackendSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow HTTP/HTTPS traffic"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"  # Consider restricting this to specific IPs

  DomainRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      TTL: '300'
      ResourceRecords:
        - !GetAtt BackendEC2Instance.PublicIp

  BackendEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      KeyName: !Ref KeyPairName
      InstanceType: "t3.micro"
      ImageId: !Ref LatestAmiId      
      IamInstanceProfile: !Ref BackendInstanceProfile
      SecurityGroupIds:
        - !Ref BackendSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update system
          yum update -y
          yum install -y docker nginx certbot python3-certbot-nginx

          # Start and enable services
          systemctl start docker
          systemctl enable docker
          systemctl start nginx
          systemctl enable nginx

          # Add ec2-user to docker group
          usermod -a -G docker ec2-user

          # Authenticate Docker with ECR
          $(aws ecr get-login --no-include-email --region us-east-1)
          
          # Pull and run backend container
          docker pull 216989142399.dkr.ecr.us-east-1.amazonaws.com/spendsage-backend:latest
          docker run -d -p 3000:3000 \
            -e AWS_REGION=${AWS::Region} \
            -e DYNAMODB_TABLE=${DynamoDBTable} \
            216989142399.dkr.ecr.us-east-1.amazonaws.com/spendsage-backend:latest

          # Configure Nginx
          cat > /etc/nginx/conf.d/backend.conf << 'EOL'
          server {
              listen 80;
              server_name ${DomainName};

              location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }
          }
          EOL

          # Reload Nginx configuration
          systemctl reload nginx

          # Get SSL certificate
          certbot --nginx -d ${DomainName} --non-interactive --agree-tos --email admin@${DomainName} --redirect

Outputs:
  InstanceId:
    Description: "Instance ID of the backend EC2 instance"
    Value: !Ref BackendEC2Instance
  EC2PublicIP:
    Description: "Public IP address of the EC2 instance"
    Value: !GetAtt BackendEC2Instance.PublicIp
  DomainName:
    Description: "Domain name for the application"
    Value: !Ref DomainName